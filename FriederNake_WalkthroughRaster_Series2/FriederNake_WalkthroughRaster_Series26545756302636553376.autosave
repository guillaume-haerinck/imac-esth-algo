final float PADDING = 30;
final float SIZE_X = 640 - PADDING;
final float SIZE_Y = 640 - PADDING;
final float STEP_X = SIZE_X / 25;
final float STEP_Y = SIZE_X / 25;
final float[] LINE_HEIGHTS = { SIZE_X / 25, SIZE_X / 20, SIZE_X / 10};

int randomIndex = 0;
float lineHeight = 0;
float posX = PADDING;
float posY = PADDING;

void setup() {
  size(640, 640);
  background(255);
  stroke(0);
  strokeWeight(4);
}

// TODO link area (perlin noise) to line height and chance to spawn
void draw() {
  while(posX < SIZE_X) { // Columns
    while(posY < SIZE_Y) { // Rows
      // Vertical lines
      randomIndex = (int) random(LINE_HEIGHTS.length);
      lineHeight = LINE_HEIGHTS[randomIndex];
      float posYend = posY + lineHeight;
      if (posYend > SIZE_Y) { posYend = SIZE_Y; }
      line(posX, posY, posX, posYend);

      // Horizontal lines
      if ((posX + STEP_X) < SIZE_X) {
        if (posY <= SIZE_Y) {
          if ((random(0, 10) > 6)) {
            line(posX, posY, posX + STEP_X, posY);
          }
        }
      }
      posY += lineHeight + STEP_Y;
    }
    posY = PADDING;
    posX += STEP_X;
  }
}
